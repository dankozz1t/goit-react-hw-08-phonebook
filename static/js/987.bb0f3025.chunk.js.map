{"version":3,"file":"static/js/987.bb0f3025.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/Singup/inputReducer.js","components/Singup/Singup.jsx","pages/SingupPage/SingupPage.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Section;\n","const inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'name':\n      return { ...state, name: action.payload };\n\n    case 'email':\n      return { ...state, email: action.payload };\n\n    case 'password':\n      return { ...state, password: action.payload };\n\n    case 'reset':\n      return { ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default inputReducer;\n","import React, { useReducer } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { getLanguage } from 'redux/language/selectors';\n\nimport { useUserSignupMutation } from 'redux/auth/authAPI/authAPI';\nimport { toast } from 'react-toastify';\n\nimport inputReducer from './inputReducer';\nimport Loader from 'components/Loader';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nconst initialValue = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst Singup = () => {\n  const lang = useSelector(getLanguage, shallowEqual);\n  const [{ name, email, password }, dispatchReducer] = useReducer(\n    inputReducer,\n    initialValue\n  );\n  const [register, { isLoading }] = useUserSignupMutation();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    dispatchReducer({ type: name, payload: value });\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return;\n    }\n\n    try {\n      await register({ name, email, password }).then(resp => {\n        resp?.error?.data?.message && toast.info(`${resp.error.data.message}`);\n        resp?.error?.data?.keyPattern?.email &&\n          toast.info(`This email address already exists`);\n      });\n\n      dispatchReducer({ type: 'reset', payload: initialValue });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Row xs>\n        <Col>\n          <Form.Label htmlFor=\"name\" className=\"formLabel\">\n            {lang.singup_labelInputName}\n          </Form.Label>\n          <Form.Control\n            className=\"mb-2\"\n            id=\"name\"\n            placeholder={lang.singup_placeholderInputName}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title={lang.singup_titleInputName}\n            value={name}\n            onChange={handleInputChange}\n            required\n          />\n        </Col>\n      </Row>\n      <Row xs>\n        <Col>\n          <Form.Label htmlFor=\"email\" className=\"formLabel\">\n            {lang.singup_labelInputEmail}\n          </Form.Label>\n          <Form.Control\n            className=\"mb-2\"\n            id=\"email\"\n            placeholder={lang.singup_placeholderInputEmail}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            title={lang.singup_titleInputEmail}\n            value={email}\n            onChange={handleInputChange}\n            required\n          />\n        </Col>\n      </Row>\n      <Row xs>\n        <Col>\n          <Form.Label htmlFor=\"password\" className=\"formLabel\">\n            {lang.singup_labelInputPassword}\n          </Form.Label>\n          <Form.Control\n            className=\"mb-2\"\n            id=\"password\"\n            placeholder={lang.singup_placeholderInputPassword}\n            type=\"password\"\n            name=\"password\"\n            pattern=\".{7,16}\"\n            title={lang.singup_titleInputPassword}\n            value={password}\n            onChange={handleInputChange}\n            required\n          />\n        </Col>\n      </Row>\n      <div className=\"d-grid gap-2\">\n        <Button variant=\"primary\" type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <Loader width=\"45\" height=\"10\" color=\"#fff\" />\n          ) : (\n            <span>{lang.btn_singup}</span>\n          )}\n        </Button>\n      </div>\n    </Form>\n  );\n};\nexport default Singup;\n","import React from 'react';\n\nimport Section from 'components/Section';\nimport Singup from 'components/Singup';\n\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { getLanguage } from 'redux/language/selectors';\n\nconst SingupPage = () => {\n  const lang = useSelector(getLanguage, shallowEqual);\n\n  return (\n    <main className=\"box\">\n      <Section title={lang.singup_tittle}>\n        <Singup />\n      </Section>\n    </main>\n  );\n};\n\nexport default SingupPage;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["title","children","className","s","state","action","type","name","payload","email","password","initialValue","lang","useSelector","getLanguage","shallowEqual","useReducer","inputReducer","dispatchReducer","useUserSignupMutation","register","isLoading","handleInputChange","e","currentTarget","value","handleFormSubmit","preventDefault","then","resp","error","data","message","toast","keyPattern","console","log","Form","onSubmit","Row","xs","Col","htmlFor","singup_labelInputName","id","placeholder","singup_placeholderInputName","pattern","singup_titleInputName","onChange","required","singup_labelInputEmail","singup_placeholderInputEmail","singup_titleInputEmail","singup_labelInputPassword","singup_placeholderInputPassword","singup_titleInputPassword","Button","variant","disabled","Loader","width","height","color","btn_singup","Section","singup_tittle","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}