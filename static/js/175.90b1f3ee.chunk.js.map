{"version":3,"file":"static/js/175.90b1f3ee.chunk.js","mappings":"mLACA,EAAwB,uB,SCoBxB,EAjBgB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,eAAIC,UAAWC,EAAf,SAAyBH,IACxBC,IAGN,C,2NCAKG,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,kBAAKF,GAAZ,IAAmBG,MAAOF,EAAOG,UAEnC,IAAK,WACH,OAAO,kBAAKJ,GAAZ,IAAmBK,SAAUJ,EAAOG,UAEtC,IAAK,QACH,OAAO,UAAKH,EAAOG,SAErB,QACE,OAAOJ,EAEZ,EAEKM,EAAe,CACnBH,MAAO,GACPE,SAAU,IA0FZ,EAvFkB,WAChB,OAA+CE,EAAAA,EAAAA,YAC7CR,EACAO,GAFF,sBAASH,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAYG,EAA5B,KAKA,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAgBC,EAAhB,KAAgBA,UAEVC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdR,EAAgB,CAAEN,KAAMa,EAAMX,QAASY,GACxC,EAEKC,EAAgB,mCAAG,WAAMJ,GAAN,oEACvBA,EAAEK,iBAEGf,GAAUE,EAHQ,0EAQfK,EAAM,CAAEP,MAAAA,EAAOE,SAAAA,IAAYc,MAAK,SAAAC,IAChC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QAASC,EAAAA,GAAAA,KAAA,iCAChB,IAVoB,OAYrBd,EAAgB,CAAEN,KAAM,QAASE,QAASE,IAZrB,gDAcrBiB,QAAQC,IAAR,MAdqB,yDAAH,sDAkBtB,OACE,iBAAM3B,UAAU,MAAhB,UACE,SAAC4B,EAAA,EAAD,CAAS9B,MAAM,QAAf,UACE,UAAC+B,EAAA,EAAD,CAAMC,SAAUV,EAAhB,WACE,SAACW,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,UAACC,EAAA,EAAD,YACE,SAACJ,EAAA,QAAD,CAAYK,QAAQ,QAAQlC,UAAU,YAAtC,oBAGA,SAAC6B,EAAA,UAAD,CACE7B,UAAU,OACVmC,GAAG,QACHC,YAAY,iBACZ/B,KAAK,QACLa,KAAK,QACLmB,QAAQ,2CACRvC,MAAM,mBACNqB,MAAOb,EACPgC,SAAUvB,EACVwB,UAAQ,UAId,SAACR,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,UAACC,EAAA,EAAD,YACE,SAACJ,EAAA,QAAD,CAAYK,QAAQ,WAAWlC,UAAU,YAAzC,uBAGA,SAAC6B,EAAA,UAAD,CACE7B,UAAU,OACVmC,GAAG,WACHC,YAAY,YACZ/B,KAAK,WACLa,KAAK,WACLmB,QAAQ,UACRvC,MAAM,kCACNqB,MAAOX,EACP8B,SAAUvB,EACVwB,UAAQ,UAId,gBAAKvC,UAAU,eAAf,UACE,SAACwC,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAASqC,SAAU5B,EAAlD,SACGA,GACC,SAAC6B,EAAA,EAAD,CAAQC,MAAM,KAAKC,OAAO,KAAKC,MAAM,UAErC,8CAQf,C","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Section;\n","import React, { useReducer } from 'react';\nimport { useUserLoginMutation } from 'redux/auth/authAPI/authAPI';\nimport { toast } from 'react-toastify';\n\nimport Loader from 'components/Loader';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Section from 'components/Section';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'email':\n      return { ...state, email: action.payload };\n\n    case 'password':\n      return { ...state, password: action.payload };\n\n    case 'reset':\n      return { ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nconst initialValue = {\n  email: '',\n  password: '',\n};\n\nconst LoginPage = () => {\n  const [{ email, password }, dispatchReducer] = useReducer(\n    inputReducer,\n    initialValue\n  );\n\n  const [login, { isLoading }] = useUserLoginMutation();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    dispatchReducer({ type: name, payload: value });\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return;\n    }\n\n    try {\n      await login({ email, password }).then(resp => {\n        resp?.error && toast.info(`Error! Wrong email or password`);\n      });\n\n      dispatchReducer({ type: 'reset', payload: initialValue });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <main className=\"box\">\n      <Section title=\"Login\">\n        <Form onSubmit={handleFormSubmit}>\n          <Row xs>\n            <Col>\n              <Form.Label htmlFor=\"email\" className=\"formLabel\">\n                Email\n              </Form.Label>\n              <Form.Control\n                className=\"mb-2\"\n                id=\"email\"\n                placeholder=\"alex@gmail.com\"\n                type=\"email\"\n                name=\"email\"\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                title=\"Enter your email\"\n                value={email}\n                onChange={handleInputChange}\n                required\n              />\n            </Col>\n          </Row>\n          <Row xs>\n            <Col>\n              <Form.Label htmlFor=\"password\" className=\"formLabel\">\n                Password\n              </Form.Label>\n              <Form.Control\n                className=\"mb-2\"\n                id=\"password\"\n                placeholder=\"hdsk23das\"\n                type=\"password\"\n                name=\"password\"\n                pattern=\".{7,16}\"\n                title=\"Enter password minimum 7 length\"\n                value={password}\n                onChange={handleInputChange}\n                required\n              />\n            </Col>\n          </Row>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" type=\"submit\" disabled={isLoading}>\n              {isLoading ? (\n                <Loader width=\"45\" height=\"10\" color=\"#fff\" />\n              ) : (\n                <span>Login</span>\n              )}\n            </Button>\n          </div>\n        </Form>\n      </Section>\n    </main>\n  );\n};\nexport default LoginPage;\n"],"names":["title","children","className","s","inputReducer","state","action","type","email","payload","password","initialValue","useReducer","dispatchReducer","useUserLoginMutation","login","isLoading","handleInputChange","e","currentTarget","name","value","handleFormSubmit","preventDefault","then","resp","error","toast","console","log","Section","Form","onSubmit","Row","xs","Col","htmlFor","id","placeholder","pattern","onChange","required","Button","variant","disabled","Loader","width","height","color"],"sourceRoot":""}