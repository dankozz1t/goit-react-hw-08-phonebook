{"version":3,"file":"static/js/175.06265846.chunk.js","mappings":"+QAIMA,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,kBAAKF,GAAZ,IAAmBG,MAAOF,EAAOG,UAEnC,IAAK,WACH,OAAO,kBAAKJ,GAAZ,IAAmBK,SAAUJ,EAAOG,UAEtC,IAAK,QACH,OAAO,UAAKH,EAAOG,SAErB,QACE,OAAOJ,EAEZ,EAEKM,EAAe,CACnBH,MAAO,GACPE,SAAU,IA8DZ,EA3DkB,WAChB,OAA+CE,EAAAA,EAAAA,YAC7CR,EACAO,GAFF,sBAASH,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAYG,EAA5B,KAKA,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,EAAgB,CAAEN,KAAMY,EAAMV,QAASW,GACxC,EAEKC,EAAgB,mCAAG,WAAMJ,GAAN,oEACvBA,EAAEK,iBAEGd,GAAUE,EAHQ,0EAQfK,EAAM,CAAEP,MAAAA,EAAOE,SAAAA,IAAYa,MAAK,SAAAC,IAChC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QAASC,EAAAA,GAAAA,KAAA,iCAChB,IAVoB,OAYrBb,EAAgB,CAAEN,KAAM,QAASE,QAASE,IAZrB,gDAcrBgB,QAAQC,IAAR,MAdqB,yDAAH,sDAkBtB,OACE,+BACE,kBAAMC,SAAUR,EAAhB,WACE,8BACE,qCACA,kBACEd,KAAK,QACLY,KAAK,QACLC,MAAOZ,EACPsB,SAAUd,QAId,8BACE,wCACA,kBACET,KAAK,WACLY,KAAK,WACLC,MAAOV,EACPoB,SAAUd,QAId,mBAAQT,KAAK,SAAb,uBAIP,C","sources":["pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React, { useReducer } from 'react';\nimport { useUserLoginMutation } from 'redux/auth/authAPI/authAPI';\nimport { toast } from 'react-toastify';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'email':\n      return { ...state, email: action.payload };\n\n    case 'password':\n      return { ...state, password: action.payload };\n\n    case 'reset':\n      return { ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nconst initialValue = {\n  email: '',\n  password: '',\n};\n\nconst LoginPage = () => {\n  const [{ email, password }, dispatchReducer] = useReducer(\n    inputReducer,\n    initialValue\n  );\n\n  const [login] = useUserLoginMutation();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    dispatchReducer({ type: name, payload: value });\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return;\n    }\n\n    try {\n      await login({ email, password }).then(resp => {\n        resp?.error && toast.info(`Error! Wrong email or password`);\n      });\n\n      dispatchReducer({ type: 'reset', payload: initialValue });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <label>\n          <span>Email</span>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <label>\n          <span>Password</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <button type=\"submit\">Login</button>\n      </form>\n    </>\n  );\n};\nexport default LoginPage;\n"],"names":["inputReducer","state","action","type","email","payload","password","initialValue","useReducer","dispatchReducer","useUserLoginMutation","login","handleInputChange","e","currentTarget","name","value","handleFormSubmit","preventDefault","then","resp","error","toast","console","log","onSubmit","onChange"],"sourceRoot":""}