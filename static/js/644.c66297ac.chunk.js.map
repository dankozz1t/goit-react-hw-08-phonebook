{"version":3,"file":"static/js/644.c66297ac.chunk.js","mappings":"+QAIMA,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACb,IAAK,OACH,OAAO,kBAAKF,GAAZ,IAAmBG,KAAMF,EAAOG,UAElC,IAAK,QACH,OAAO,kBAAKJ,GAAZ,IAAmBK,MAAOJ,EAAOG,UAEnC,IAAK,WACH,OAAO,kBAAKJ,GAAZ,IAAmBM,SAAUL,EAAOG,UAEtC,IAAK,QACH,OAAO,UAAKH,EAAOG,SAErB,QACE,OAAOJ,EAEZ,EAEKO,EAAe,CACnBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAyEZ,EAtEqB,WACnB,OAAqDE,EAAAA,EAAAA,YACnDT,EACAQ,GAFF,sBAASJ,EAAT,EAASA,KAAME,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAYG,EAAlC,KAIA,GAAmBC,EAAAA,EAAAA,MAAZC,GAAP,eAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACdN,EAAgB,CAAEP,KAAMC,EAAMC,QAASW,GACxC,EAEKC,EAAgB,mCAAG,WAAMH,GAAN,oEACvBA,EAAEI,iBAEGZ,GAAUC,EAHQ,0EAQfK,EAAS,CAAER,KAAAA,EAAME,MAAAA,EAAOC,SAAAA,IAAYY,MAAK,SAAAC,GAAS,IAAD,WACjD,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMC,aAAN,mBAAaC,YAAb,eAAmBC,UAAWC,EAAAA,GAAAA,KAAA,UAAcJ,EAAKC,MAAMC,KAAKC,WACxD,OAAJH,QAAI,IAAJA,GAAA,UAAAA,EAAMC,aAAN,mBAAaC,YAAb,mBAAmBG,kBAAnB,eAA+BnB,QAC7BkB,EAAAA,GAAAA,KAAA,oCACH,IAZoB,OAcrBd,EAAgB,CAAEP,KAAM,QAASE,QAASG,IAdrB,gDAgBrBkB,QAAQC,IAAR,MAhBqB,yDAAH,sDAoBtB,OACE,+BACE,kBAAMC,SAAUX,EAAhB,WACE,8BACE,oCACA,kBACEd,KAAK,OACLC,KAAK,OACLY,MAAOZ,EACPyB,SAAUhB,QAId,8BACE,qCACA,kBACEV,KAAK,QACLC,KAAK,QACLY,MAAOV,EACPuB,SAAUhB,QAId,8BACE,wCACA,kBACEV,KAAK,WACLC,KAAK,WACLY,MAAOT,EACPsB,SAAUhB,QAId,mBAAQV,KAAK,SAAb,uBAIP,C","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import React, { useReducer } from 'react';\nimport { useUserSignupMutation } from 'redux/auth/authAPI/authAPI';\nimport { toast } from 'react-toastify';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'name':\n      return { ...state, name: action.payload };\n\n    case 'email':\n      return { ...state, email: action.payload };\n\n    case 'password':\n      return { ...state, password: action.payload };\n\n    case 'reset':\n      return { ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nconst initialValue = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterPage = () => {\n  const [{ name, email, password }, dispatchReducer] = useReducer(\n    inputReducer,\n    initialValue\n  );\n  const [register] = useUserSignupMutation();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    dispatchReducer({ type: name, payload: value });\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return;\n    }\n\n    try {\n      await register({ name, email, password }).then(resp => {\n        resp?.error?.data?.message && toast.info(`${resp.error.data.message}`);\n        resp?.error?.data?.keyPattern?.email &&\n          toast.info(`This email address already exists`);\n      });\n\n      dispatchReducer({ type: 'reset', payload: initialValue });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <label>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <label>\n          <span>Email</span>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <label>\n          <span>Password</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <button type=\"submit\">Login</button>\n      </form>\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["inputReducer","state","action","type","name","payload","email","password","initialValue","useReducer","dispatchReducer","useUserSignupMutation","register","handleInputChange","e","currentTarget","value","handleFormSubmit","preventDefault","then","resp","error","data","message","toast","keyPattern","console","log","onSubmit","onChange"],"sourceRoot":""}